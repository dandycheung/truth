#!/bin/bash

# Script to dump a partial subset of the user-visible Truth API.
#
# We're going for:
#
# - APIs that are public or protected in the class file
#
# - excluding synthetic APIs
#
# - excluding internal APIs _whose names are mangled_ (as internal _functions_
# are but not classes or constructors)
#
# - excluding the Companion *field* that kotlinc generates in each class with a
# companion object
#
# - excluding classes that are empty after all of the above (to hide "boring"
# companion objects, though sadly to potentially also hide "interesting"
# classes like FailureMetadata or any future unintentionally visible types, so
# we may want to undo this filter when we're done with the Kotlin conversion so
# that we can review the results)

set -euE
set -o pipefail

readonly TRUTH_JAR_WEIRD_EXTENSION="$1"
shift

TMP="$(mktemp -d)"
readonly TMP
trap "rm -rf '${TMP}'" EXIT
readonly TRUTH_JAR="${TMP}/libtruth.jar"
cp "${TRUTH_JAR_WEIRD_EXTENSION}" "${TRUTH_JAR}"

while (( $# )); do
  case "$1" in
    */javap ) JAVAP="$1" ;;
    */jar ) JAR="$1" ;;
  esac
  shift
done
readonly JAVAP
readonly JAR

if [[ -z "$JAVAP" ]]; then
  echo "Failed to find javap" >&2
  exit 1
fi

if [[ -z "$JAR" ]]; then
  echo "Failed to find jar" >&2
  exit 1
fi

dump_truth_jar() {
  local truth
  truth="$(readlink -f "$1")"
  "${JAR}" -tf "${truth}" \
    | sed -n 's/[.]class$//p'\
    | grep -v META-INF \
    | LC_COLLATE=C sort \
    | xargs "${JAVAP}" -classpath "${truth}" -protected -v
}

filter_to_public_classes() {
  perl -ne 'print if (/^public/ && ! /\$\d/) ... /^[}]$/'
}

filter_to_actual_apis_and_all_flags() {
  grep -E '^(\s\s)?(public|protected)|flags:'
}

filter_out_synthetic() {
  # The javap output has each API first, then its flags. We work backward, printing the API if its flags lacked SYNTHETIC.
  tac | perl -ne 'if (/flags:/) { $synthetic = /SYNTHETIC/; } else { print if !$synthetic; }' | tac
}

filter_out_mangled_internal_names() {
  grep -v '[$]third_party'
}

filter_out_autogenerated_companion_fields() {
  grep -v 'public static final.*[$]Companion'
}

filter_out_now_empty_classes() {
  grep '^ ' -B 1 --no-group-separator
}

hide_final_in_final_classes() {
  perl -pe 'if (/^public/) { $final = /^public final/; } else { s/ final / / if $final; }'
}

add_blanks_between_classes() {
  perl -lpe 'print "" if /^public/'
}

dump_truth_jar "${TRUTH_JAR}" \
  | filter_to_public_classes \
  | filter_to_actual_apis_and_all_flags \
  | filter_out_synthetic \
  | filter_out_mangled_internal_names \
  | filter_out_autogenerated_companion_fields \
  | filter_out_now_empty_classes \
  | hide_final_in_final_classes \
  | add_blanks_between_classes
